<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprt_crate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_terrain</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 1;
vsp = 0;
max_vsp = 15;
grounded = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(vsp &lt; max_vsp) vsp += grav;

if(place_meeting(x, y+5, obj_moving_platform_base)){
    var player_on_top = instance_place(x, y-1, obj_player);
    var platform = instance_place(x, y+5, obj_moving_platform_base);
    if(platform.behavior == 1){
        if(platform.goingRight) {
            x+=platform.velocity;
            if(player_on_top != noone){
                player_on_top.x+=platform.velocity;
            }
        }
        else {
            x-=platform.velocity;
            if(player_on_top != noone){
                player_on_top.x-=platform.velocity;
            }
        }
    }
    else if(platform.behavior == 2){
        if(platform.goingRight) {
            y+=platform.velocity;
            if(player_on_top != noone){
                player_on_top.y+=platform.velocity;
            }
        }
        else {
            y-=platform.velocity;
            if(player_on_top != noone){
                player_on_top.y-=platform.velocity;
            }
        }
    }
    else{
        x += cos(platform.angle) * platform.length;
        y += sin(platform.angle) * platform.length;
    }
}

if(place_meeting(x, y+vsp, obj_terrain))
{
    while(!place_meeting(x, y+sign(vsp), obj_terrain))
    {
        y+=sign(vsp);
    }
    vsp = 0;
}
else
{
    var p = instance_nearest(x, y, obj_player);
    if(p!=noone)
        p.grab = false;
}
y += vsp;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
