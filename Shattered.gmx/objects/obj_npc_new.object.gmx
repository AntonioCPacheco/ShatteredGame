<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(vsp &lt; max_vsp) vsp += grav;

//horizontal collision
if(place_meeting(x+hsp, y, obj_terrain)){
    while(!place_meeting(x+sign(hsp), y, obj_terrain)){
        x+=sign(hsp);
    }
    hsp = 0;
}
x += hsp;

//vertical collision
if(place_meeting(x, y+vsp, obj_terrain)){
    while(!place_meeting(x, y+sign(vsp), obj_terrain)){
        y+=sign(vsp);
    }
    vsp = 0;
}

y += vsp;

//////////////
// States of Action
//////////////
//saves the npc's original position
if(original_x == 0){ original_x = x; }
//check if npc is performing an atack
if(attacking)
{   
        with instance_create(x, y, obj_attack_enemy_hit){
            image_xscale = obj_player.image_xscale;
        }
        attacking = false;
    
}
//npc is idle
else if(state_of_action == 0){
   hsp = 0;
}
//npc is roaming and might be alerted if the player comes near
else if(state_of_action == 1){
    hsp = obj_player.movesp /2;
    if(moving_right &amp;&amp; x &lt; original_x + 80){
        x += hsp/2;
    }
    else if (moving_right){
        x += -hsp/2;
        moving_right = false;
    }
    else if(x &gt; original_x -80){
        x += -hsp/2;
    }
    else{ 
        x += hsp/2;
        moving_right = true;
    }
    hsp = 0;    
    if((place_meeting(x+150, y, obj_player) || place_meeting(x-150, y, obj_player)) &amp;&amp; !friendly){
        state_of_action = 2;
    }
}
//npc is going after player trying to kill him
else if(state_of_action == 2){
    if(place_meeting(x+5, y, obj_player)){
        attacking = true;
    }
    else if(place_meeting(x-5, y, obj_player)){
        attacking = true;
    }
        
    else if(obj_player.x &lt; x){
        hsp = -5;
    }    
    else if(obj_player.x &gt; x){
        hsp = 5;
    }

}
/*else if(state_of_action == 3){


}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_attack_hit">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hp &lt;= 0){
    instance_destroy();
}
else{ 
    hp -= 35;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_arrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hp &lt;= 0){
    instance_destroy();

    with(other)
    {
        instance_destroy();
    }
}
else{
    hp -= 25;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
